{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./CodeforcesComparison.css';// Import your CSS file for styles\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserTagSolveCounts=()=>{const[handle,setHandle]=useState('');const[tagCounts,setTagCounts]=useState({});const[loading,setLoading]=useState(false);const[selectedTag,setSelectedTag]=useState(null);const[tagProblems,setTagProblems]=useState([]);const[sortByTag,setSortByTag]=useState('name');// Default sort by tag name\nconst[sortOrder,setSortOrder]=useState('asc');// Default sort order for tags\nconst[sortByProblems,setSortByProblems]=useState('asc');// Default sort order for problems\nconst fetchData=async()=>{setLoading(true);try{const result='OK';const response=await axios.get(\"https://codeforces.com/api/user.status?handle=\".concat(handle,\"&result=\").concat(result));const submissions=response.data.result;const uniqueProblems=new Set();const newTagCounts={};submissions.forEach(submission=>{var _submission$problem,_submission$problem2;const problemId=((_submission$problem=submission.problem)===null||_submission$problem===void 0?void 0:_submission$problem.contestId)+((_submission$problem2=submission.problem)===null||_submission$problem2===void 0?void 0:_submission$problem2.index);if(!uniqueProblems.has(problemId)&&submission.verdict===result){var _submission$problem3;uniqueProblems.add(problemId);const tags=((_submission$problem3=submission.problem)===null||_submission$problem3===void 0?void 0:_submission$problem3.tags)||[];const uniqueTags=Array.from(new Set(tags));// Ensure unique tags\nuniqueTags.forEach(tag=>{newTagCounts[tag]=(newTagCounts[tag]||new Set()).add({id:problemId,name:submission.problem.name,rating:submission.problem.rating,link:\"https://codeforces.com/problemset/problem/\".concat(submission.problem.contestId,\"/\").concat(submission.problem.index)});});}});setTagCounts(newTagCounts);}catch(error){console.error('Error fetching data:',error);}finally{setLoading(false);}};const handleTagClick=tag=>{setSelectedTag(tag);// Get all problems associated with the selected tag\nconst problems=Array.from(tagCounts[tag]||[]);setTagProblems(problems);};const handleSortChange=event=>{const selectedSortBy=event.target.value;setSortOrder(selectedSortBy);// Apply sorting for tag list\nconst sortedTagList=sortTagList(Object.entries(tagCounts));setTagCounts(sortedTagList);// Apply sorting for right column problems list\nconst sortedProblems=sortProblemsList(tagProblems,selectedSortBy);setTagProblems(sortedProblems);};const sortTagList=tagList=>{switch(sortByTag){case'name':return tagList.sort((a,b)=>a[0].localeCompare(b[0]));case'countAsc':return tagList.sort((a,b)=>a[1].size-b[1].size);case'countDesc':return tagList.sort((a,b)=>b[1].size-a[1].size);default:return tagList;}};const sortProblemsList=(problemsList,order)=>{return problemsList.sort((a,b)=>{const ratingA=a.rating||0;const ratingB=b.rating||0;if(order==='asc'){return ratingA-ratingB;}else{return ratingB-ratingA;}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-tag-solve-counts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Tag Solve Counts \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Codeforces Handle:\",/*#__PURE__*/_jsx(\"span\",{children:\"\\xA0\\xA0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:handle,onChange:e=>setHandle(e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,disabled:!handle||loading,children:\"Fetch Data\"})}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Sort By Tag:\",/*#__PURE__*/_jsx(\"span\",{children:\"\\xA0\\xA0\"}),/*#__PURE__*/_jsxs(\"select\",{value:sortByTag,onChange:e=>setSortByTag(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"option\",{value:\"countAsc\",children:\"Count Asc\"}),/*#__PURE__*/_jsx(\"option\",{value:\"countDesc\",children:\"Count Desc\"})]})]})]}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"tag-list\",children:sortTagList(Object.entries(tagCounts)).map(_ref=>{let[tag,solveCount]=_ref;return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"button\",{className:\"tag-button\",onClick:()=>handleTagClick(tag),children:[tag,\": \",solveCount.size]})},tag);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"right-column\",children:selectedTag&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Problems associated with \",selectedTag]}),/*#__PURE__*/_jsx(\"div\",{className:\"sort-container\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Sort By:\",/*#__PURE__*/_jsx(\"span\",{children:\"\\xA0\\xA0\"}),/*#__PURE__*/_jsxs(\"select\",{value:sortByProblems,onChange:e=>setSortByProblems(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"asc\",children:\"Ascending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"desc\",children:\"Descending\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-list\",children:sortProblemsList(tagProblems,sortByProblems).map((problem,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"a\",{href:problem.link,target:\"_blank\",rel:\"noopener noreferrer\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"index\",children:[index+1,\".\"]}),/*#__PURE__*/_jsx(\"span\",{children:\"\\xA0\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"problem-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"problem-name\",children:problem.name}),problem.rating&&/*#__PURE__*/_jsxs(\"span\",{children:[\"(\",problem.rating,\")\"]})]})]})},index))})]})})]});};export default UserTagSolveCounts;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","UserTagSolveCounts","handle","setHandle","tagCounts","setTagCounts","loading","setLoading","selectedTag","setSelectedTag","tagProblems","setTagProblems","sortByTag","setSortByTag","sortOrder","setSortOrder","sortByProblems","setSortByProblems","fetchData","result","response","get","concat","submissions","data","uniqueProblems","Set","newTagCounts","forEach","submission","_submission$problem","_submission$problem2","problemId","problem","contestId","index","has","verdict","_submission$problem3","add","tags","uniqueTags","Array","from","tag","id","name","rating","link","error","console","handleTagClick","problems","handleSortChange","event","selectedSortBy","target","value","sortedTagList","sortTagList","Object","entries","sortedProblems","sortProblemsList","tagList","sort","a","b","localeCompare","size","problemsList","order","ratingA","ratingB","className","children","type","onChange","e","onClick","disabled","map","_ref","solveCount","href","rel"],"sources":["/Users/emon/Desktop/a-bit-of-CP/src/CodeforcesComparison.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './CodeforcesComparison.css'; // Import your CSS file for styles\n\nconst UserTagSolveCounts = () => {\n  const [handle, setHandle] = useState('');\n  const [tagCounts, setTagCounts] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [tagProblems, setTagProblems] = useState([]);\n  const [sortByTag, setSortByTag] = useState('name'); // Default sort by tag name\n  const [sortOrder, setSortOrder] = useState('asc'); // Default sort order for tags\n  const [sortByProblems, setSortByProblems] = useState('asc'); // Default sort order for problems\n\n  const fetchData = async () => {\n    setLoading(true);\n\n    try {\n      const result = 'OK';\n      const response = await axios.get(`https://codeforces.com/api/user.status?handle=${handle}&result=${result}`);\n      const submissions = response.data.result;\n\n      const uniqueProblems = new Set();\n      const newTagCounts = {};\n\n      submissions.forEach((submission) => {\n        const problemId = submission.problem?.contestId + submission.problem?.index;\n\n        if (!uniqueProblems.has(problemId) && submission.verdict === result) {\n          uniqueProblems.add(problemId);\n\n          const tags = submission.problem?.tags || [];\n          const uniqueTags = Array.from(new Set(tags)); // Ensure unique tags\n\n          uniqueTags.forEach((tag) => {\n            newTagCounts[tag] = (newTagCounts[tag] || new Set()).add({\n              id: problemId,\n              name: submission.problem.name,\n              rating: submission.problem.rating,\n              link: `https://codeforces.com/problemset/problem/${submission.problem.contestId}/${submission.problem.index}`\n            });\n          });\n        }\n      });\n\n      setTagCounts(newTagCounts);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTagClick = (tag) => {\n    setSelectedTag(tag);\n\n    // Get all problems associated with the selected tag\n    const problems = Array.from(tagCounts[tag] || []);\n    setTagProblems(problems);\n  };\n\n  const handleSortChange = (event) => {\n    const selectedSortBy = event.target.value;\n    setSortOrder(selectedSortBy);\n\n    // Apply sorting for tag list\n    const sortedTagList = sortTagList(Object.entries(tagCounts));\n    setTagCounts(sortedTagList);\n\n    // Apply sorting for right column problems list\n    const sortedProblems = sortProblemsList(tagProblems, selectedSortBy);\n    setTagProblems(sortedProblems);\n  };\n\n  const sortTagList = (tagList) => {\n    switch (sortByTag) {\n      case 'name':\n        return tagList.sort((a, b) => a[0].localeCompare(b[0]));\n      case 'countAsc':\n        return tagList.sort((a, b) => a[1].size - b[1].size);\n      case 'countDesc':\n        return tagList.sort((a, b) => b[1].size - a[1].size);\n      default:\n        return tagList;\n    }\n  };\n\n  const sortProblemsList = (problemsList, order) => {\n    return problemsList.sort((a, b) => {\n      const ratingA = a.rating || 0;\n      const ratingB = b.rating || 0;\n\n      if (order === 'asc') {\n        return ratingA - ratingB;\n      } else {\n        return ratingB - ratingA;\n      }\n    });\n  };\n\n  return (\n    <div className=\"user-tag-solve-counts\">\n      <div className=\"left-column\">\n        <h2>User Tag Solve Counts </h2>\n        <div className=\"input-section\">\n          <label>\n            Codeforces Handle:<span>&nbsp;&nbsp;</span>\n            <input type=\"text\" value={handle} onChange={(e) => setHandle(e.target.value)} />\n          </label>\n          <div className=\"button-container\">\n            <button onClick={fetchData} disabled={!handle || loading}>\n              Fetch Data\n            </button>\n          </div>\n          <label>\n            Sort By Tag:<span>&nbsp;&nbsp;</span>\n            <select value={sortByTag} onChange={(e) => setSortByTag(e.target.value)}>\n              <option value=\"name\">Name</option>\n              <option value=\"countAsc\">Count Asc</option>\n              <option value=\"countDesc\">Count Desc</option>\n            </select>\n          </label>\n        </div>\n\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <ul className=\"tag-list\">\n            {sortTagList(Object.entries(tagCounts)).map(([tag, solveCount]) => (\n              <li key={tag}>\n                <button className=\"tag-button\" onClick={() => handleTagClick(tag)}>\n                  {tag}: {solveCount.size}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className=\"right-column\">\n        {selectedTag && (\n          <div>\n            <h2>Problems associated with {selectedTag}</h2>\n            <div className=\"sort-container\">\n              <label>\n                Sort By:<span>&nbsp;&nbsp;</span>\n                <select value={sortByProblems} onChange={(e) => setSortByProblems(e.target.value)}>\n                  <option value=\"asc\">Ascending</option>\n                  <option value=\"desc\">Descending</option>\n                </select>\n              </label>\n            </div>\n            <div className=\"card-list\">\n              {sortProblemsList(tagProblems, sortByProblems).map((problem, index) => (\n                <div className=\"card\" key={index}>\n                  <a href={problem.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span className=\"index\">{index + 1}.</span>\n                    <span>&nbsp;</span>\n                    <span className=\"problem-info\">\n                      <span className=\"problem-name\">{problem.name}</span>\n                      {problem.rating && <span>({problem.rating})</span>}\n                    </span>\n                  </a>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserTagSolveCounts;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,4BAA4B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACe,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,MAAM,CAAC,CAAE;AACpD,KAAM,CAACmB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAE;AACnD,KAAM,CAACqB,cAAc,CAAEC,iBAAiB,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAE7D,KAAM,CAAAuB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5BX,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACF,KAAM,CAAAY,MAAM,CAAG,IAAI,CACnB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAxB,KAAK,CAACyB,GAAG,kDAAAC,MAAA,CAAkDpB,MAAM,aAAAoB,MAAA,CAAWH,MAAM,CAAE,CAAC,CAC5G,KAAM,CAAAI,WAAW,CAAGH,QAAQ,CAACI,IAAI,CAACL,MAAM,CAExC,KAAM,CAAAM,cAAc,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAChC,KAAM,CAAAC,YAAY,CAAG,CAAC,CAAC,CAEvBJ,WAAW,CAACK,OAAO,CAAEC,UAAU,EAAK,KAAAC,mBAAA,CAAAC,oBAAA,CAClC,KAAM,CAAAC,SAAS,CAAG,EAAAF,mBAAA,CAAAD,UAAU,CAACI,OAAO,UAAAH,mBAAA,iBAAlBA,mBAAA,CAAoBI,SAAS,IAAAH,oBAAA,CAAGF,UAAU,CAACI,OAAO,UAAAF,oBAAA,iBAAlBA,oBAAA,CAAoBI,KAAK,EAE3E,GAAI,CAACV,cAAc,CAACW,GAAG,CAACJ,SAAS,CAAC,EAAIH,UAAU,CAACQ,OAAO,GAAKlB,MAAM,CAAE,KAAAmB,oBAAA,CACnEb,cAAc,CAACc,GAAG,CAACP,SAAS,CAAC,CAE7B,KAAM,CAAAQ,IAAI,CAAG,EAAAF,oBAAA,CAAAT,UAAU,CAACI,OAAO,UAAAK,oBAAA,iBAAlBA,oBAAA,CAAoBE,IAAI,GAAI,EAAE,CAC3C,KAAM,CAAAC,UAAU,CAAGC,KAAK,CAACC,IAAI,CAAC,GAAI,CAAAjB,GAAG,CAACc,IAAI,CAAC,CAAC,CAAE;AAE9CC,UAAU,CAACb,OAAO,CAAEgB,GAAG,EAAK,CAC1BjB,YAAY,CAACiB,GAAG,CAAC,CAAG,CAACjB,YAAY,CAACiB,GAAG,CAAC,EAAI,GAAI,CAAAlB,GAAG,CAAC,CAAC,EAAEa,GAAG,CAAC,CACvDM,EAAE,CAAEb,SAAS,CACbc,IAAI,CAAEjB,UAAU,CAACI,OAAO,CAACa,IAAI,CAC7BC,MAAM,CAAElB,UAAU,CAACI,OAAO,CAACc,MAAM,CACjCC,IAAI,8CAAA1B,MAAA,CAA+CO,UAAU,CAACI,OAAO,CAACC,SAAS,MAAAZ,MAAA,CAAIO,UAAU,CAACI,OAAO,CAACE,KAAK,CAC7G,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF9B,YAAY,CAACsB,YAAY,CAAC,CAC5B,CAAE,MAAOsB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CAAC,OAAS,CACR1C,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA4C,cAAc,CAAIP,GAAG,EAAK,CAC9BnC,cAAc,CAACmC,GAAG,CAAC,CAEnB;AACA,KAAM,CAAAQ,QAAQ,CAAGV,KAAK,CAACC,IAAI,CAACvC,SAAS,CAACwC,GAAG,CAAC,EAAI,EAAE,CAAC,CACjDjC,cAAc,CAACyC,QAAQ,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,KAAK,EAAK,CAClC,KAAM,CAAAC,cAAc,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CACzC1C,YAAY,CAACwC,cAAc,CAAC,CAE5B;AACA,KAAM,CAAAG,aAAa,CAAGC,WAAW,CAACC,MAAM,CAACC,OAAO,CAACzD,SAAS,CAAC,CAAC,CAC5DC,YAAY,CAACqD,aAAa,CAAC,CAE3B;AACA,KAAM,CAAAI,cAAc,CAAGC,gBAAgB,CAACrD,WAAW,CAAE6C,cAAc,CAAC,CACpE5C,cAAc,CAACmD,cAAc,CAAC,CAChC,CAAC,CAED,KAAM,CAAAH,WAAW,CAAIK,OAAO,EAAK,CAC/B,OAAQpD,SAAS,EACf,IAAK,MAAM,CACT,MAAO,CAAAoD,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAC,CAAC,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACzD,IAAK,UAAU,CACb,MAAO,CAAAH,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAC,CAAC,CAAC,CAACG,IAAI,CAAGF,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CACtD,IAAK,WAAW,CACd,MAAO,CAAAL,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAGH,CAAC,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CACtD,QACE,MAAO,CAAAL,OAAO,CAClB,CACF,CAAC,CAED,KAAM,CAAAD,gBAAgB,CAAGA,CAACO,YAAY,CAAEC,KAAK,GAAK,CAChD,MAAO,CAAAD,YAAY,CAACL,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACjC,KAAM,CAAAK,OAAO,CAAGN,CAAC,CAACnB,MAAM,EAAI,CAAC,CAC7B,KAAM,CAAA0B,OAAO,CAAGN,CAAC,CAACpB,MAAM,EAAI,CAAC,CAE7B,GAAIwB,KAAK,GAAK,KAAK,CAAE,CACnB,MAAO,CAAAC,OAAO,CAAGC,OAAO,CAC1B,CAAC,IAAM,CACL,MAAO,CAAAA,OAAO,CAAGD,OAAO,CAC1B,CACF,CAAC,CAAC,CACJ,CAAC,CAED,mBACExE,KAAA,QAAK0E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpC3E,KAAA,QAAK0E,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7E,IAAA,OAAA6E,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/B3E,KAAA,QAAK0E,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B3E,KAAA,UAAA2E,QAAA,EAAO,oBACa,cAAA7E,IAAA,SAAA6E,QAAA,CAAM,UAAY,CAAM,CAAC,cAC3C7E,IAAA,UAAO8E,IAAI,CAAC,MAAM,CAACnB,KAAK,CAAEvD,MAAO,CAAC2E,QAAQ,CAAGC,CAAC,EAAK3E,SAAS,CAAC2E,CAAC,CAACtB,MAAM,CAACC,KAAK,CAAE,CAAE,CAAC,EAC3E,CAAC,cACR3D,IAAA,QAAK4E,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/B7E,IAAA,WAAQiF,OAAO,CAAE7D,SAAU,CAAC8D,QAAQ,CAAE,CAAC9E,MAAM,EAAII,OAAQ,CAAAqE,QAAA,CAAC,YAE1D,CAAQ,CAAC,CACN,CAAC,cACN3E,KAAA,UAAA2E,QAAA,EAAO,cACO,cAAA7E,IAAA,SAAA6E,QAAA,CAAM,UAAY,CAAM,CAAC,cACrC3E,KAAA,WAAQyD,KAAK,CAAE7C,SAAU,CAACiE,QAAQ,CAAGC,CAAC,EAAKjE,YAAY,CAACiE,CAAC,CAACtB,MAAM,CAACC,KAAK,CAAE,CAAAkB,QAAA,eACtE7E,IAAA,WAAQ2D,KAAK,CAAC,MAAM,CAAAkB,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClC7E,IAAA,WAAQ2D,KAAK,CAAC,UAAU,CAAAkB,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C7E,IAAA,WAAQ2D,KAAK,CAAC,WAAW,CAAAkB,QAAA,CAAC,YAAU,CAAQ,CAAC,EACvC,CAAC,EACJ,CAAC,EACL,CAAC,CAELrE,OAAO,cACNR,IAAA,MAAA6E,QAAA,CAAG,YAAU,CAAG,CAAC,cAEjB7E,IAAA,OAAI4E,SAAS,CAAC,UAAU,CAAAC,QAAA,CACrBhB,WAAW,CAACC,MAAM,CAACC,OAAO,CAACzD,SAAS,CAAC,CAAC,CAAC6E,GAAG,CAACC,IAAA,MAAC,CAACtC,GAAG,CAAEuC,UAAU,CAAC,CAAAD,IAAA,oBAC5DpF,IAAA,OAAA6E,QAAA,cACE3E,KAAA,WAAQ0E,SAAS,CAAC,YAAY,CAACK,OAAO,CAAEA,CAAA,GAAM5B,cAAc,CAACP,GAAG,CAAE,CAAA+B,QAAA,EAC/D/B,GAAG,CAAC,IAAE,CAACuC,UAAU,CAACd,IAAI,EACjB,CAAC,EAHFzB,GAIL,CAAC,EACN,CAAC,CACA,CACL,EACE,CAAC,cAEN9C,IAAA,QAAK4E,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BnE,WAAW,eACVR,KAAA,QAAA2E,QAAA,eACE3E,KAAA,OAAA2E,QAAA,EAAI,2BAAyB,CAACnE,WAAW,EAAK,CAAC,cAC/CV,IAAA,QAAK4E,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B3E,KAAA,UAAA2E,QAAA,EAAO,UACG,cAAA7E,IAAA,SAAA6E,QAAA,CAAM,UAAY,CAAM,CAAC,cACjC3E,KAAA,WAAQyD,KAAK,CAAEzC,cAAe,CAAC6D,QAAQ,CAAGC,CAAC,EAAK7D,iBAAiB,CAAC6D,CAAC,CAACtB,MAAM,CAACC,KAAK,CAAE,CAAAkB,QAAA,eAChF7E,IAAA,WAAQ2D,KAAK,CAAC,KAAK,CAAAkB,QAAA,CAAC,WAAS,CAAQ,CAAC,cACtC7E,IAAA,WAAQ2D,KAAK,CAAC,MAAM,CAAAkB,QAAA,CAAC,YAAU,CAAQ,CAAC,EAClC,CAAC,EACJ,CAAC,CACL,CAAC,cACN7E,IAAA,QAAK4E,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBZ,gBAAgB,CAACrD,WAAW,CAAEM,cAAc,CAAC,CAACiE,GAAG,CAAC,CAAChD,OAAO,CAAEE,KAAK,gBAChErC,IAAA,QAAK4E,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnB3E,KAAA,MAAGoF,IAAI,CAAEnD,OAAO,CAACe,IAAK,CAACQ,MAAM,CAAC,QAAQ,CAAC6B,GAAG,CAAC,qBAAqB,CAAAV,QAAA,eAC9D3E,KAAA,SAAM0E,SAAS,CAAC,OAAO,CAAAC,QAAA,EAAExC,KAAK,CAAG,CAAC,CAAC,GAAC,EAAM,CAAC,cAC3CrC,IAAA,SAAA6E,QAAA,CAAM,MAAM,CAAM,CAAC,cACnB3E,KAAA,SAAM0E,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC5B7E,IAAA,SAAM4E,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAE1C,OAAO,CAACa,IAAI,CAAO,CAAC,CACnDb,OAAO,CAACc,MAAM,eAAI/C,KAAA,SAAA2E,QAAA,EAAM,GAAC,CAAC1C,OAAO,CAACc,MAAM,CAAC,GAAC,EAAM,CAAC,EAC9C,CAAC,EACN,CAAC,EARqBZ,KAStB,CACN,CAAC,CACC,CAAC,EACH,CACN,CACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}